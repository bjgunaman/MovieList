[{"/Users/brandonjon/Documents/Github/MovieList/movielist-app/src/index.js":"1","/Users/brandonjon/Documents/Github/MovieList/movielist-app/src/App.js":"2","/Users/brandonjon/Documents/Github/MovieList/movielist-app/src/reportWebVitals.js":"3","/Users/brandonjon/Documents/Github/MovieList/movielist-app/src/Components/MainPage/MainPage.js":"4","/Users/brandonjon/Documents/Github/MovieList/movielist-app/src/Components/MainPage/Header/MainPageHeader.js":"5","/Users/brandonjon/Documents/Github/MovieList/movielist-app/src/Components/MainPage/Row/MainPageRow.js":"6","/Users/brandonjon/Documents/Github/MovieList/movielist-app/src/API/axios.js":"7","/Users/brandonjon/Documents/Github/MovieList/movielist-app/src/API/requests.js":"8","/Users/brandonjon/Documents/Github/MovieList/movielist-app/src/Components/MoviePage.js/MoviePage.js":"9","/Users/brandonjon/Documents/Github/MovieList/movielist-app/src/API/firebase.js":"10","/Users/brandonjon/Documents/Github/MovieList/movielist-app/src/Components/Login/Login.js":"11","/Users/brandonjon/Documents/Github/MovieList/movielist-app/src/Components/ProfilePage/ProfilePage.js":"12"},{"size":500,"mtime":1610515034819,"results":"13","hashOfConfig":"14"},{"size":741,"mtime":1611033529885,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1610515034819,"results":"16","hashOfConfig":"14"},{"size":6741,"mtime":1611034531780,"results":"17","hashOfConfig":"14"},{"size":548,"mtime":1611033691864,"results":"18","hashOfConfig":"14"},{"size":2870,"mtime":1611027280883,"results":"19","hashOfConfig":"14"},{"size":133,"mtime":1610604418434,"results":"20","hashOfConfig":"14"},{"size":1690,"mtime":1610865312371,"results":"21","hashOfConfig":"14"},{"size":4184,"mtime":1610886279710,"results":"22","hashOfConfig":"14"},{"size":1759,"mtime":1611034434382,"results":"23","hashOfConfig":"14"},{"size":1111,"mtime":1610948980613,"results":"24","hashOfConfig":"14"},{"size":2289,"mtime":1611034028758,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"tdy2lg",{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":1,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/brandonjon/Documents/Github/MovieList/movielist-app/src/index.js",[],["58","59"],"/Users/brandonjon/Documents/Github/MovieList/movielist-app/src/App.js",["60","61","62","63","64"],"import React , { useState, useEffect, Component } from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport './App.css';\nimport MainPage from './Components/MainPage/MainPage';\nimport MoviePage from './Components/MoviePage.js/MoviePage';\nimport Login from './Components/Login/Login';\nimport ProfilePage from './Components/ProfilePage/ProfilePage';\n\n\nconst API_KEY = \"b306339ebb5b313ade8f867891116f10\";\nfunction App() {\n  return (\n    <Router>\n      {/* <Route exact path=\"/\" component={Login} /> */}\n      <Route exact path=\"/\" component={MainPage} /> \n      <Route path=\"/movie_page\" component={MoviePage} /> \n      <Route path=\"/profile_page\" component={ProfilePage} />\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/brandonjon/Documents/Github/MovieList/movielist-app/src/reportWebVitals.js",[],"/Users/brandonjon/Documents/Github/MovieList/movielist-app/src/Components/MainPage/MainPage.js",["65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82"],"import React , { useState, useEffect, Component } from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport { Link, withRouter } from 'react-router-dom';\nimport MainPageHeader from './Header/MainPageHeader';\nimport MainPageRow from './Row/MainPageRow';\nimport {requestsByGenre} from '../../API/requests';\nimport firebase from \"firebase\";\nimport \"firebase/auth\";\n// import { firebaseConfig } from '../../API/firebase';\nimport {\n    FirebaseAuthProvider,\n    FirebaseAuthConsumer,\n    IfFirebaseAuthed,\n    IfFirebaseAuthedAnd\n  } from \"@react-firebase/auth\";\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport app from '../../API/firebase';\nimport './MainPage.css';\n\n \n  \n\nconst MainPage = () => {\n\n    const [isSignedIn, setIsSignedIn] = useState(false); // Local signed-in state.\n\n    const [favMoviesId, setfavMoviesId] = useState([]);\n    const [favGenres, setGenres] = useState([]);\n    const [favMovieTitles, setfavMovieTitles] = useState([]);\n    const [favMovieImgs, setfavMoviesImgs] = useState([]);\n    const [favMovieVotes, setfavMovieVotes] = useState([]);\n\n\n    \n\n    // Listen to the Firebase Auth state and set the local state.\n    useEffect(() => {\n        const unregisterAuthObserver = app.onAuthStateChanged(user => {\n                                            setIsSignedIn(!!user);\n                                        });\n        \n        \n        return () => unregisterAuthObserver(); // Make sure we un-register Firebase observers when the component unmounts.\n    }, []);\n\n    useEffect(() => {\n        const fetchDataFirebase = async () => {\n            console.log(\"here\");\n            if (isSignedIn) {\n                const docRef = db.collection(\"accounts\").doc(`${firebase.auth().currentUser.uid}`);\n                docRef.get().then((doc) => {\n                    if (doc.exists) {\n                        console.log(\"Document data:\", doc.data());\n                        setfavMovieTitles(doc.data().favoriteMovieTitles);\n                        setfavMoviesId(doc.data().favoriteMoviesId);\n                        setfavMoviesImgs(doc.data().favoriteMovieImgs);\n                        setGenres(doc.data().favoriteGenres);\n                        setfavMovieVotes(doc.data().favoriteMovieVotes);\n                    } else {\n                        console.log(\"No such document!\");\n                        docRef.set({\n                            favoriteMoviesId:[],\n                            favoriteGenres: [],\n                            favoriteMovieImgs: [],\n                            favoriteMovieTitles:[],\n                            favoriteMovieVotes:[]\n                        })\n                    }\n                \n                })\n            }\n            \n        }\n        fetchDataFirebase();\n    },[isSignedIn]);\n\n    useEffect(() => {\n        const editFavoriteMovieToFirestore = () => {\n            if (isSignedIn) {\n                db.collection(\"accounts\").doc(`${firebase.auth().currentUser.uid}`).set({\n                    favoriteMoviesId:favMoviesId,\n                    favoriteGenres: favGenres,\n                    favoriteMovieImgs: favMovieImgs,\n                    favoriteMovieTitles:favMovieTitles,\n                    favoriteMovieVotes: favMovieVotes\n                })\n            }\n        }\n        editFavoriteMovieToFirestore();\n    },[favMoviesId, favMovieVotes, favMovieTitles, favMovieImgs]);\n\n    !firebase.apps.length ?  firebase.initializeApp(firebaseConfig) : firebase.app();\n\n    const db = firebase.firestore();\n    const uiConfig = {\n        signInFlow: 'popup',\n        \n        signInOptions: [\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n        ],\n        callbacks: {\n            signInSuccessWithAuthResult: () => false,\n        },\n    };\n    \n    const addFavoriteMovie = (favoriteMovieId, favoriteMovieImg, favoriteMovieTitle, favoriteMovieVotes) => {\n        \n        setfavMoviesId([...favMoviesId, favoriteMovieId]);\n        setfavMoviesImgs([...favMovieImgs, favoriteMovieImg]);\n        setfavMovieTitles([...favMovieTitles , favoriteMovieTitle]);\n        setfavMovieVotes([...favMovieVotes, favoriteMovieVotes]);\n        \n        console.log(\"adding2\")\n        console.log(favMoviesId);\n\n    }\n    \n    const removeFavoriteMovie = (favoriteMovieId, favoriteMovieImg, favoriteMovieTitle, favoriteMovieVotes) => {\n        \n        \n        // console.log(favMoviesId.filter(id => id == favoriteMovieId))\n        setfavMoviesId(favMoviesId.filter(id => id != favoriteMovieId));\n        setfavMoviesImgs(favMovieImgs.filter(img => img != favoriteMovieImg));\n        setfavMovieTitles(favMovieTitles.filter(title => title != favoriteMovieTitle));\n        setfavMovieVotes(favMovieVotes.filter(votes => votes != favoriteMovieVotes));\n\n    }\n\n    const addingOrRemovingMovie = (movieInfo) => {\n        for (let i = 0; i < favMoviesId.length; i++) {\n            if (movieInfo.id == favMoviesId[i]) {\n                removeFavoriteMovie(movieInfo.id, movieInfo.backdrop_path, movieInfo.title, movieInfo.vote_average)\n                return\n            } \n        }\n        \n        addFavoriteMovie(movieInfo.id, movieInfo.backdrop_path, movieInfo.title, movieInfo.vote_average) ;\n        \n        // console.log(favMoviesId);\n    }\n\n    const checkIfMovieFavorited = (movieInfo) => {\n        for (let i = 0; i < favMoviesId.length; i++) {\n            if (movieInfo.id == favMoviesId[i]) {\n                return true;\n            } \n        }\n        return false;\n        \n    }\n    \n\n    if (!isSignedIn) {\n        return (\n            <div>\n                <h1>My App</h1>\n                <p>Please sign-in:</p>\n                <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n            </div>\n        );\n    } else {\n\n        return (\n            \n                <div className=\"MainPage\">\n                    <MainPageHeader/>\n                    <MainPageRow title=\"Action\" fetchUrl={requestsByGenre.getAction} addingOrRemovingMovie={addingOrRemovingMovie} checkIfMovieFavorited={checkIfMovieFavorited}/>\n                    <MainPageRow title=\"Comedy\" fetchUrl={requestsByGenre.getComedy} addingOrRemovingMovie={addingOrRemovingMovie} checkIfMovieFavorited={checkIfMovieFavorited}/>\n                    <MainPageRow title=\"Mystery\" fetchUrl={requestsByGenre.getMystery} addingOrRemovingMovie={addingOrRemovingMovie} checkIfMovieFavorited={checkIfMovieFavorited}/>\n                    <MainPageRow title=\"Romance\" fetchUrl={requestsByGenre.getRomance}  addingOrRemovingMovie={addingOrRemovingMovie} checkIfMovieFavorited={checkIfMovieFavorited}/>\n                </div>       \n        );\n    }\n}\n\nexport default withRouter(MainPage);","/Users/brandonjon/Documents/Github/MovieList/movielist-app/src/Components/MainPage/Header/MainPageHeader.js",["83","84","85","86","87","88"],"import React , { useState, useEffect, Component } from 'react';\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\nimport './MainPageHeader.css';\nconst MainPageHeader = (props) => {\n\n    const goToProfilePage = () => {\n    }\n    return (\n    <div className=\"mainPageHeader\">\n        <h1 className=\"header text-white\">MovieList</h1>\n        <Link to={'/profile_page'} >\n            <button type=\"button\" className=\"btn btn-info profile_button\"> Profile</button>\n        </Link>\n    </div>\n    );\n}\n\nexport default MainPageHeader;","/Users/brandonjon/Documents/Github/MovieList/movielist-app/src/Components/MainPage/Row/MainPageRow.js",["89","90","91","92","93"],"import React , { useState, useEffect, Component } from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport { Link, withRouter } from 'react-router-dom';\nimport axios from '../../../API/axios';\nimport './MainPageRow.css';\nimport firebase from \"firebase\";\n\n\n\nconst MainPageRow = (props) => {\n    const baseImgUrl = \"https://image.tmdb.org/t/p/original\";\n    const [movies, setMovies] = useState([]);\n    \n\n    useEffect(() => {\n        const fetchData = async () => {\n            const request = await axios.get(props.fetchUrl);\n            setMovies(request.data.results);\n            // console.log(request.data.results);\n           \n            \n            return request;\n\n        }\n    \n        fetchData();\n        \n        \n        \n    },[props.fetchUrl])\n    const goToMoviePage = async (index) => {\n        const movieId = movies[index].id;\n\n        \n        props.history.replace(`/movie_page?movie_id=${movieId}`);\n        \n        \n    }\n    \n\n    const renderItem2 = () => {\n        return movies.map(\n            (movie, index) =>\n              movie.backdrop_path !== null && (\n                <div className=\"item\" key={movies[index].id} >\n                    <div className=\"movie_image\">\n                        <img src={`${baseImgUrl}${movies[index].backdrop_path}`} alt={movies[index].title} onClick={() => goToMoviePage(index)}/>\n                    </div>\n                    \n                    <div className=\"movie_subinfo\">\n                        <p className=\"movie_title\">{movies[index].title}</p>\n                        <p>Votes: {movies[index].vote_average} / 10</p>\n                        <button className={(!props.checkIfMovieFavorited(movies[index])) ? \"btn btn-outline-danger\" : \"btn btn-danger\"} onClick={()=> props.addingOrRemovingMovie(movies[index])}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-heart\" viewBox=\"0 0 16 16\">\n                        <path d=\"M8 2.748l-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\"/>\n                        </svg></button>\n                    </div>\n                </div>\n              )\n        )\n    }\n\n    \n\n\n    return (\n        <div className=\"py-4\">\n            <div className=\"row_title\"> \n                <h2 className=\"title-section text-white\"> {props.title} </h2>\n            </div>\n                <div className=\"row_posters\">\n                    {\n                        renderItem2()\n                    }\n                </div>                    \n        </div>\n    );\n\n}\n\nexport default withRouter(MainPageRow);","/Users/brandonjon/Documents/Github/MovieList/movielist-app/src/API/axios.js",[],"/Users/brandonjon/Documents/Github/MovieList/movielist-app/src/API/requests.js",["94"],"const API_KEY = \"b306339ebb5b313ade8f867891116f10\";\nconst RAPID_API_KEY = \"8eb9b4c8fcmsh82c4ba4166e3c70p1df254jsn5d24f23d75bb\";\n\nexport const requestsByGenre = {\n    getAction: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    getComedy: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    getRomance: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    getDocumentary: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n    getHorror: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    getAdventure: `/discover/movie?api_key=${API_KEY}&with_genres=12`,\n    getCrime: `/discover/movie?api_key=${API_KEY}&with_genres=80`,\n    getAnimation: `/discover/movie?api_key=${API_KEY}&with_genres=16`,\n    getFantasy: `/discover/movie?api_key=${API_KEY}&with_genres=14`,\n    getHistory: `/discover/movie?api_key=${API_KEY}&with_genres=36`,\n    getThriller: `/discover/movie?api_key=${API_KEY}&with_genres=53`,\n    getAdventure: `/discover/movie?api_key=${API_KEY}&with_genres=12`,\n    getMystery: `/discover/movie?api_key=${API_KEY}&with_genres=9648`,\n    getScienceFiction: `/discover/movie?api_key=${API_KEY}&with_genres=878`\n}\n\nexport const requestMovieByIdWithCred = (movieId) => {\n    return `/movie/${movieId}?api_key=${API_KEY}&append_to_response=credits`\n}\n    \n\nexport const generateRequestMovieInfoImdb = (imdbId) => {\n    const options = {\n        method: 'GET',\n        url: 'https://movie-database-imdb-alternative.p.rapidapi.com/',\n        params: {i: imdbId, r: 'json'},\n        headers: {\n          'x-rapidapi-key': RAPID_API_KEY,\n          'x-rapidapi-host': 'movie-database-imdb-alternative.p.rapidapi.com'\n        }\n    };\n    return options\n    \n}\n\n\n\n","/Users/brandonjon/Documents/Github/MovieList/movielist-app/src/Components/MoviePage.js/MoviePage.js",["95","96","97","98","99","100","101","102","103"],"import instance from '../../API/axios';\nimport React , { useState, useEffect, Component } from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport { Link, withRouter } from 'react-router-dom';\nimport {requestMovieByIdWithCred, generateRequestMovieInfoImdb} from '../../API/requests';\nimport axios from 'axios';\nimport './MoviePage.css';\n\n\nconst MoviePage = () => {\n    const baseImgUrl = \"https://image.tmdb.org/t/p/original\";\n    const [movieInfo, setMovieInfo] = useState({});\n    const [imdbInfo, setImdbInfo] = useState({});\n    const [casts, setCastsInfo] = useState([]);\n    const [crew, setCrewInfo] = useState([]);\n    const [ratings, setRatings] = useState([]);\n    useEffect(() => {\n        const fetchData = async () => {\n            const urlSearchParams = new URLSearchParams(window.location.search);\n            const movieId = urlSearchParams.get(\"movie_id\");\n            console.log(movieId);\n            const getMovieUrl = requestMovieByIdWithCred(movieId);\n            console.log(getMovieUrl);\n            instance.get(getMovieUrl)\n                    .then(async (response) => {\n                        setMovieInfo(response.data)\n                        const options = generateRequestMovieInfoImdb(response.data.imdb_id);\n                        axios.request(options)\n                            .then(response => {\n                                setImdbInfo(response.data)\n                                setRatings(response.data.Ratings);\n                                // setRatings(response.data.Ratings)\n                                \n                                return response;\n                            })\n                            .catch(error => console.log(error))\n                        return response;\n                    })\n                    .catch(error => console.log(error))\n            \n            \n        }\n        fetchData();\n        console.log(imdbInfo);\n        console.log(movieInfo);\n    },[])\n\n    const mystyle = { \n                        backgroundImage: `url(${baseImgUrl}${movieInfo.backdrop_path})`\n                    }\n\n\n\n    return (\n       \n        <div className= \"movie_page_bg\" style={mystyle}>\n            <div className=\"black_background\">\n                <div className=\"movie_meta\">\n                    <div className=\"movie_page_title\">\n                        <h1>{movieInfo.title}</h1>\n                    </div>\n                    <br />\n                    \n                    <div className=\"movie_page_summary\">{imdbInfo.Plot}</div>\n                    <br />\n            \n                \n                    <div className=\"movie_mini_info\"> <p className=\"bold\">Genre:</p> {imdbInfo.Genre}</div>\n                    <div className=\"movie_mini_info\"> <p className=\"bold\">Director:</p> {imdbInfo.Director} </div>\n                    <div className=\"movie_mini_info\"> <p className=\"bold\">Writer:</p> {imdbInfo.Writer} </div>\n                    <div className=\"movie_mini_info\"> <p className=\"bold\">Actor:</p> {imdbInfo.Actors} </div>\n                    <div className=\"movie_mini_info\"> <p className=\"bold\">Production: </p>{imdbInfo.Production} </div>\n                    <div className=\"movie_mini_info\"> <p className=\"bold\">Runtime: </p>{movieInfo.runtime} </div>\n                    <div className=\"movie_mini_info\"> <p className=\"bold\">Rating: </p>{imdbInfo.Rated} </div>\n                    <div className=\"movie_mini_info\"> <p className=\"bold\">Language: </p>{imdbInfo.Language} </div>\n                    <div className=\"ratings_area movie_mini_info\">\n                        {console.log(imdbInfo)}\n                        \n                        {\n                            \n                            ratings.map((ratingsInfo, index) => {\n                                return <div className=\"each_ratings\" key={index}><p className=\"bold\">{ratingsInfo.Source}:</p> {ratingsInfo.Value}</div>\n                            })\n                        } \n                    </div>\n                    \n\n        \n                </div>\n\n            </div>\n            \n        </div>\n        \n        \n    )\n\n\n}\n\n\nexport default withRouter(MoviePage);","/Users/brandonjon/Documents/Github/MovieList/movielist-app/src/API/firebase.js",["104"],"import firebase from 'firebase';\nimport app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firebase-firestore';\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAdAOTClkyKzkLAFwz0iEhPGfXfuBRUw-8\",\n    authDomain: \"movielist-ab0e7.firebaseapp.com\",\n    databaseURL: \"https://movielist-ab0e7.firebaseio.com\",\n    projectId: \"movielist-ab0e7\",\n    storageBucket: \"movielist-ab0e7.appspot.com\",\n    messagingSenderId: \"499054733310\",\n    appId: \"1:499054733310:web:1176afcef6112e0a3882af\",\n    measurementId: \"G-MEASUREMENT_ID\"\n};\nclass Firebase {\n    constructor() {\n        app.initializeApp(firebaseConfig);\n        this.auth = app.auth();\n        this.db = app.firestore();\n    }\n\n    login(email,password) {\n        return this.auth.signInWithEmailAndPassword(email, password);\n    }\n\n    logout() {\n        return this.auth.signOut();\n    }\n\n    async register(name, email, password) {\n        await this.auth.createUserWithEmailAndPassword(email, password)\n        return this.auth.currentUser.updateProfile({\n            displayName: name\n        })\n    }\n\n    isInitialized() {\n        return new Promise(resolve => {\n            this.auth.onAuthStateChanged(resolve);\n        })\n    }\n    getCurrentUsername() {\n        return this.auth.currentUser && this.auth.currentUser.displayName;\n    }\n\n    verifyEmail() {\n        this.auth.currentUser.sendEmailVerification()\n            .then(() => {\n                //email sent\n            })\n            .catch((error) => {\n                alert(error.message);\n            })\n    }\n\n    getVerified() {\n        return this.auth.currentUser.emailVerified;\n    }\n\n\n}\n\nexport default new Firebase();\nexport default !firebase.apps.length ? firebase.initializeApp(firebaseConfig) : firebase.app();\n\n\n\n","/Users/brandonjon/Documents/Github/MovieList/movielist-app/src/Components/Login/Login.js",[],"/Users/brandonjon/Documents/Github/MovieList/movielist-app/src/Components/ProfilePage/ProfilePage.js",["105","106","107","108","109","110","111","112","113","114","115","116","117","118"],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":1,"column":18,"nodeType":"125","messageId":"126","endLine":1,"endColumn":26},{"ruleId":"123","severity":1,"message":"127","line":1,"column":28,"nodeType":"125","messageId":"126","endLine":1,"endColumn":37},{"ruleId":"123","severity":1,"message":"128","line":1,"column":39,"nodeType":"125","messageId":"126","endLine":1,"endColumn":48},{"ruleId":"123","severity":1,"message":"129","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":13},{"ruleId":"123","severity":1,"message":"130","line":10,"column":7,"nodeType":"125","messageId":"126","endLine":10,"endColumn":14},{"ruleId":"123","severity":1,"message":"128","line":1,"column":39,"nodeType":"125","messageId":"126","endLine":1,"endColumn":48},{"ruleId":"123","severity":1,"message":"131","line":2,"column":26,"nodeType":"125","messageId":"126","endLine":2,"endColumn":32},{"ruleId":"123","severity":1,"message":"132","line":2,"column":34,"nodeType":"125","messageId":"126","endLine":2,"endColumn":39},{"ruleId":"123","severity":1,"message":"133","line":3,"column":10,"nodeType":"125","messageId":"126","endLine":3,"endColumn":14},{"ruleId":"123","severity":1,"message":"134","line":11,"column":5,"nodeType":"125","messageId":"126","endLine":11,"endColumn":25},{"ruleId":"123","severity":1,"message":"135","line":12,"column":5,"nodeType":"125","messageId":"126","endLine":12,"endColumn":25},{"ruleId":"123","severity":1,"message":"136","line":13,"column":5,"nodeType":"125","messageId":"126","endLine":13,"endColumn":21},{"ruleId":"123","severity":1,"message":"137","line":14,"column":5,"nodeType":"125","messageId":"126","endLine":14,"endColumn":24},{"ruleId":"123","severity":1,"message":"138","line":17,"column":8,"nodeType":"125","messageId":"126","endLine":17,"endColumn":11},{"ruleId":"139","severity":1,"message":"140","line":75,"column":7,"nodeType":"141","endLine":75,"endColumn":19,"suggestions":"142"},{"ruleId":"139","severity":1,"message":"143","line":90,"column":7,"nodeType":"141","endLine":90,"endColumn":65,"suggestions":"144"},{"ruleId":"145","severity":2,"message":"146","line":92,"column":53,"nodeType":"125","messageId":"147","endLine":92,"endColumn":67},{"ruleId":"148","severity":1,"message":"149","line":122,"column":52,"nodeType":"150","messageId":"151","endLine":122,"endColumn":54},{"ruleId":"148","severity":1,"message":"149","line":123,"column":57,"nodeType":"150","messageId":"151","endLine":123,"endColumn":59},{"ruleId":"148","severity":1,"message":"149","line":124,"column":64,"nodeType":"150","messageId":"151","endLine":124,"endColumn":66},{"ruleId":"148","severity":1,"message":"149","line":125,"column":62,"nodeType":"150","messageId":"151","endLine":125,"endColumn":64},{"ruleId":"148","severity":1,"message":"152","line":131,"column":30,"nodeType":"150","messageId":"151","endLine":131,"endColumn":32},{"ruleId":"148","severity":1,"message":"152","line":144,"column":30,"nodeType":"150","messageId":"151","endLine":144,"endColumn":32},{"ruleId":"123","severity":1,"message":"124","line":1,"column":18,"nodeType":"125","messageId":"126","endLine":1,"endColumn":26},{"ruleId":"123","severity":1,"message":"127","line":1,"column":28,"nodeType":"125","messageId":"126","endLine":1,"endColumn":37},{"ruleId":"123","severity":1,"message":"128","line":1,"column":39,"nodeType":"125","messageId":"126","endLine":1,"endColumn":48},{"ruleId":"123","severity":1,"message":"131","line":2,"column":26,"nodeType":"125","messageId":"126","endLine":2,"endColumn":32},{"ruleId":"123","severity":1,"message":"132","line":2,"column":34,"nodeType":"125","messageId":"126","endLine":2,"endColumn":39},{"ruleId":"123","severity":1,"message":"153","line":6,"column":11,"nodeType":"125","messageId":"126","endLine":6,"endColumn":26},{"ruleId":"123","severity":1,"message":"128","line":1,"column":39,"nodeType":"125","messageId":"126","endLine":1,"endColumn":48},{"ruleId":"123","severity":1,"message":"131","line":2,"column":26,"nodeType":"125","messageId":"126","endLine":2,"endColumn":32},{"ruleId":"123","severity":1,"message":"132","line":2,"column":34,"nodeType":"125","messageId":"126","endLine":2,"endColumn":39},{"ruleId":"123","severity":1,"message":"133","line":3,"column":10,"nodeType":"125","messageId":"126","endLine":3,"endColumn":14},{"ruleId":"123","severity":1,"message":"154","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":16},{"ruleId":"155","severity":1,"message":"156","line":16,"column":5,"nodeType":"157","messageId":"151","endLine":16,"endColumn":17},{"ruleId":"123","severity":1,"message":"128","line":2,"column":39,"nodeType":"125","messageId":"126","endLine":2,"endColumn":48},{"ruleId":"123","severity":1,"message":"131","line":3,"column":26,"nodeType":"125","messageId":"126","endLine":3,"endColumn":32},{"ruleId":"123","severity":1,"message":"132","line":3,"column":34,"nodeType":"125","messageId":"126","endLine":3,"endColumn":39},{"ruleId":"123","severity":1,"message":"133","line":4,"column":10,"nodeType":"125","messageId":"126","endLine":4,"endColumn":14},{"ruleId":"123","severity":1,"message":"158","line":14,"column":12,"nodeType":"125","messageId":"126","endLine":14,"endColumn":17},{"ruleId":"123","severity":1,"message":"159","line":14,"column":19,"nodeType":"125","messageId":"126","endLine":14,"endColumn":31},{"ruleId":"123","severity":1,"message":"160","line":15,"column":12,"nodeType":"125","messageId":"126","endLine":15,"endColumn":16},{"ruleId":"123","severity":1,"message":"161","line":15,"column":18,"nodeType":"125","messageId":"126","endLine":15,"endColumn":29},{"ruleId":"139","severity":1,"message":"162","line":46,"column":7,"nodeType":"141","endLine":46,"endColumn":9,"suggestions":"163"},{"ruleId":null,"fatal":true,"severity":2,"message":"164","line":64,"column":1},{"ruleId":"123","severity":1,"message":"128","line":1,"column":39,"nodeType":"125","messageId":"126","endLine":1,"endColumn":48},{"ruleId":"123","severity":1,"message":"131","line":2,"column":26,"nodeType":"125","messageId":"126","endLine":2,"endColumn":32},{"ruleId":"123","severity":1,"message":"132","line":2,"column":34,"nodeType":"125","messageId":"126","endLine":2,"endColumn":39},{"ruleId":"123","severity":1,"message":"133","line":3,"column":10,"nodeType":"125","messageId":"126","endLine":3,"endColumn":14},{"ruleId":"123","severity":1,"message":"165","line":5,"column":9,"nodeType":"125","messageId":"126","endLine":5,"endColumn":24},{"ruleId":"123","severity":1,"message":"138","line":7,"column":8,"nodeType":"125","messageId":"126","endLine":7,"endColumn":11},{"ruleId":"123","severity":1,"message":"166","line":9,"column":10,"nodeType":"125","messageId":"126","endLine":9,"endColumn":24},{"ruleId":"123","severity":1,"message":"167","line":13,"column":12,"nodeType":"125","messageId":"126","endLine":13,"endColumn":23},{"ruleId":"123","severity":1,"message":"168","line":14,"column":12,"nodeType":"125","messageId":"126","endLine":14,"endColumn":21},{"ruleId":"123","severity":1,"message":"169","line":15,"column":12,"nodeType":"125","messageId":"126","endLine":15,"endColumn":26},{"ruleId":"123","severity":1,"message":"170","line":16,"column":12,"nodeType":"125","messageId":"126","endLine":16,"endColumn":24},{"ruleId":"123","severity":1,"message":"171","line":17,"column":12,"nodeType":"125","messageId":"126","endLine":17,"endColumn":25},{"ruleId":"139","severity":1,"message":"140","line":48,"column":7,"nodeType":"141","endLine":48,"endColumn":9,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":53,"column":17,"nodeType":"175","endLine":53,"endColumn":100},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Component' is defined but never used.","'Login' is defined but never used.","'API_KEY' is assigned a value but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'FirebaseAuthProvider' is defined but never used.","'FirebaseAuthConsumer' is defined but never used.","'IfFirebaseAuthed' is defined but never used.","'IfFirebaseAuthedAnd' is defined but never used.","'app' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'db'. Either include it or remove the dependency array.","ArrayExpression",["178"],"React Hook useEffect has missing dependencies: 'db', 'favGenres', and 'isSignedIn'. Either include them or remove the dependency array.",["179"],"no-undef","'firebaseConfig' is not defined.","undef","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'goToProfilePage' is assigned a value but never used.","'firebase' is defined but never used.","no-dupe-keys","Duplicate key 'getAdventure'.","ObjectExpression","'casts' is assigned a value but never used.","'setCastsInfo' is assigned a value but never used.","'crew' is assigned a value but never used.","'setCrewInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'imdbInfo' and 'movieInfo'. Either include them or remove the dependency array.",["180"],"Parsing error: Only one default export allowed per module.\n\n\u001b[0m \u001b[90m 62 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 63 | \u001b[39m\u001b[36mexport\u001b[39m \u001b[36mdefault\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mFirebase\u001b[39m()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 | \u001b[39m\u001b[36mexport\u001b[39m \u001b[36mdefault\u001b[39m \u001b[33m!\u001b[39mfirebase\u001b[33m.\u001b[39mapps\u001b[33m.\u001b[39mlength \u001b[33m?\u001b[39m firebase\u001b[33m.\u001b[39minitializeApp(firebaseConfig) \u001b[33m:\u001b[39m firebase\u001b[33m.\u001b[39mapp()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m\u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 65 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 66 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 67 | \u001b[39m\u001b[0m","'requestsByGenre' is defined but never used.","'firebaseConfig' is defined but never used.","'favMoviesId' is assigned a value but never used.","'favGenres' is assigned a value but never used.","'favMovieTitles' is assigned a value but never used.","'favMovieImgs' is assigned a value but never used.","'favMovieVotes' is assigned a value but never used.",["181"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},"Update the dependencies array to be: [db, isSignedIn]",{"range":"190","text":"191"},"Update the dependencies array to be: [favMoviesId, favMovieVotes, favMovieTitles, favMovieImgs, isSignedIn, db, favGenres]",{"range":"192","text":"193"},"Update the dependencies array to be: [imdbInfo, movieInfo]",{"range":"194","text":"195"},"Update the dependencies array to be: [db]",{"range":"196","text":"197"},[2832,2844],"[db, isSignedIn]",[3392,3450],"[favMoviesId, favMovieVotes, favMovieTitles, favMovieImgs, isSignedIn, db, favGenres]",[1987,1989],"[imdbInfo, movieInfo]",[1925,1927],"[db]"]